/**
 * This file was automatically generated by GraphQL Nexus
 * Do not make changes to this file directly
 */

import * as ctx from "../src/types"
import * as photon from "@generated/photon"
import { core } from "nexus"

declare global {
  interface NexusGenCustomOutputMethods<TypeName extends string> {
    crud: NexusPrisma<TypeName, 'crud'>
    model: NexusPrisma<TypeName, 'model'>
  }
}

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  EventTypeCreateInput: { // input type
    allowedPassTypes?: NexusGenInputs['PassTypeCreateManyWithoutAllowedPassTypesInput'] | null; // PassTypeCreateManyWithoutAllowedPassTypesInput
    id?: string | null; // ID
    name: string; // String!
  }
  EventTypeCreateManyWithoutAllowedEventTypesInput: { // input type
    connect?: NexusGenInputs['EventTypeWhereUniqueInput'][] | null; // [EventTypeWhereUniqueInput!]
    create?: NexusGenInputs['EventTypeCreateWithoutAllowedPassTypesInput'][] | null; // [EventTypeCreateWithoutAllowedPassTypesInput!]
  }
  EventTypeCreateWithoutAllowedPassTypesInput: { // input type
    id?: string | null; // ID
    name: string; // String!
  }
  EventTypeUpdateInput: { // input type
    allowedPassTypes?: NexusGenInputs['PassTypeUpdateManyWithoutAllowedEventTypesInput'] | null; // PassTypeUpdateManyWithoutAllowedEventTypesInput
    name?: string | null; // String
  }
  EventTypeWhereUniqueInput: { // input type
    id?: string | null; // ID
  }
  PassTypeCreateInput: { // input type
    allowedEventTypes?: NexusGenInputs['EventTypeCreateManyWithoutAllowedEventTypesInput'] | null; // EventTypeCreateManyWithoutAllowedEventTypesInput
    id?: string | null; // ID
    name: string; // String!
  }
  PassTypeCreateManyWithoutAllowedPassTypesInput: { // input type
    connect?: NexusGenInputs['PassTypeWhereUniqueInput'][] | null; // [PassTypeWhereUniqueInput!]
    create?: NexusGenInputs['PassTypeCreateWithoutAllowedEventTypesInput'][] | null; // [PassTypeCreateWithoutAllowedEventTypesInput!]
  }
  PassTypeCreateWithoutAllowedEventTypesInput: { // input type
    id?: string | null; // ID
    name: string; // String!
  }
  PassTypeScalarWhereInput: { // input type
    AND?: NexusGenInputs['PassTypeScalarWhereInput'][] | null; // [PassTypeScalarWhereInput!]
    id?: string | null; // ID
    id_contains?: string | null; // ID
    id_ends_with?: string | null; // ID
    id_gt?: string | null; // ID
    id_gte?: string | null; // ID
    id_in?: string[] | null; // [ID!]
    id_lt?: string | null; // ID
    id_lte?: string | null; // ID
    id_not?: string | null; // ID
    id_not_contains?: string | null; // ID
    id_not_ends_with?: string | null; // ID
    id_not_in?: string[] | null; // [ID!]
    id_not_starts_with?: string | null; // ID
    id_starts_with?: string | null; // ID
    name?: string | null; // String
    name_contains?: string | null; // String
    name_ends_with?: string | null; // String
    name_gt?: string | null; // String
    name_gte?: string | null; // String
    name_in?: string[] | null; // [String!]
    name_lt?: string | null; // String
    name_lte?: string | null; // String
    name_not?: string | null; // String
    name_not_contains?: string | null; // String
    name_not_ends_with?: string | null; // String
    name_not_in?: string[] | null; // [String!]
    name_not_starts_with?: string | null; // String
    name_starts_with?: string | null; // String
    NOT?: NexusGenInputs['PassTypeScalarWhereInput'][] | null; // [PassTypeScalarWhereInput!]
    OR?: NexusGenInputs['PassTypeScalarWhereInput'][] | null; // [PassTypeScalarWhereInput!]
  }
  PassTypeUpdateManyDataInput: { // input type
    name?: string | null; // String
  }
  PassTypeUpdateManyWithWhereNestedInput: { // input type
    data: NexusGenInputs['PassTypeUpdateManyDataInput']; // PassTypeUpdateManyDataInput!
    where: NexusGenInputs['PassTypeScalarWhereInput']; // PassTypeScalarWhereInput!
  }
  PassTypeUpdateManyWithoutAllowedEventTypesInput: { // input type
    connect?: NexusGenInputs['PassTypeWhereUniqueInput'][] | null; // [PassTypeWhereUniqueInput!]
    create?: NexusGenInputs['PassTypeCreateWithoutAllowedEventTypesInput'][] | null; // [PassTypeCreateWithoutAllowedEventTypesInput!]
    delete?: NexusGenInputs['PassTypeWhereUniqueInput'][] | null; // [PassTypeWhereUniqueInput!]
    deleteMany?: NexusGenInputs['PassTypeScalarWhereInput'][] | null; // [PassTypeScalarWhereInput!]
    disconnect?: NexusGenInputs['PassTypeWhereUniqueInput'][] | null; // [PassTypeWhereUniqueInput!]
    set?: NexusGenInputs['PassTypeWhereUniqueInput'][] | null; // [PassTypeWhereUniqueInput!]
    update?: NexusGenInputs['PassTypeUpdateWithWhereUniqueWithoutAllowedEventTypesInput'][] | null; // [PassTypeUpdateWithWhereUniqueWithoutAllowedEventTypesInput!]
    updateMany?: NexusGenInputs['PassTypeUpdateManyWithWhereNestedInput'][] | null; // [PassTypeUpdateManyWithWhereNestedInput!]
    upsert?: NexusGenInputs['PassTypeUpsertWithWhereUniqueWithoutAllowedEventTypesInput'][] | null; // [PassTypeUpsertWithWhereUniqueWithoutAllowedEventTypesInput!]
  }
  PassTypeUpdateWithWhereUniqueWithoutAllowedEventTypesInput: { // input type
    data: NexusGenInputs['PassTypeUpdateWithoutAllowedEventTypesDataInput']; // PassTypeUpdateWithoutAllowedEventTypesDataInput!
    where: NexusGenInputs['PassTypeWhereUniqueInput']; // PassTypeWhereUniqueInput!
  }
  PassTypeUpdateWithoutAllowedEventTypesDataInput: { // input type
    name?: string | null; // String
  }
  PassTypeUpsertWithWhereUniqueWithoutAllowedEventTypesInput: { // input type
    create: NexusGenInputs['PassTypeCreateWithoutAllowedEventTypesInput']; // PassTypeCreateWithoutAllowedEventTypesInput!
    update: NexusGenInputs['PassTypeUpdateWithoutAllowedEventTypesDataInput']; // PassTypeUpdateWithoutAllowedEventTypesDataInput!
    where: NexusGenInputs['PassTypeWhereUniqueInput']; // PassTypeWhereUniqueInput!
  }
  PassTypeWhereUniqueInput: { // input type
    id?: string | null; // ID
  }
}

export interface NexusGenEnums {
}

export interface NexusGenRootTypes {
  EventType: photon.EventType;
  Mutation: {};
  PassType: photon.PassType;
  Query: {};
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
  EventTypeCreateInput: NexusGenInputs['EventTypeCreateInput'];
  EventTypeCreateManyWithoutAllowedEventTypesInput: NexusGenInputs['EventTypeCreateManyWithoutAllowedEventTypesInput'];
  EventTypeCreateWithoutAllowedPassTypesInput: NexusGenInputs['EventTypeCreateWithoutAllowedPassTypesInput'];
  EventTypeUpdateInput: NexusGenInputs['EventTypeUpdateInput'];
  EventTypeWhereUniqueInput: NexusGenInputs['EventTypeWhereUniqueInput'];
  PassTypeCreateInput: NexusGenInputs['PassTypeCreateInput'];
  PassTypeCreateManyWithoutAllowedPassTypesInput: NexusGenInputs['PassTypeCreateManyWithoutAllowedPassTypesInput'];
  PassTypeCreateWithoutAllowedEventTypesInput: NexusGenInputs['PassTypeCreateWithoutAllowedEventTypesInput'];
  PassTypeScalarWhereInput: NexusGenInputs['PassTypeScalarWhereInput'];
  PassTypeUpdateManyDataInput: NexusGenInputs['PassTypeUpdateManyDataInput'];
  PassTypeUpdateManyWithWhereNestedInput: NexusGenInputs['PassTypeUpdateManyWithWhereNestedInput'];
  PassTypeUpdateManyWithoutAllowedEventTypesInput: NexusGenInputs['PassTypeUpdateManyWithoutAllowedEventTypesInput'];
  PassTypeUpdateWithWhereUniqueWithoutAllowedEventTypesInput: NexusGenInputs['PassTypeUpdateWithWhereUniqueWithoutAllowedEventTypesInput'];
  PassTypeUpdateWithoutAllowedEventTypesDataInput: NexusGenInputs['PassTypeUpdateWithoutAllowedEventTypesDataInput'];
  PassTypeUpsertWithWhereUniqueWithoutAllowedEventTypesInput: NexusGenInputs['PassTypeUpsertWithWhereUniqueWithoutAllowedEventTypesInput'];
  PassTypeWhereUniqueInput: NexusGenInputs['PassTypeWhereUniqueInput'];
}

export interface NexusGenFieldTypes {
  EventType: { // field return type
    allowedPassTypes: NexusGenRootTypes['PassType'][] | null; // [PassType!]
    id: string; // ID!
    name: string; // String!
  }
  Mutation: { // field return type
    createOneEventType: NexusGenRootTypes['EventType']; // EventType!
    createOnePassType: NexusGenRootTypes['PassType']; // PassType!
    updateOneEventType: NexusGenRootTypes['EventType'] | null; // EventType
  }
  PassType: { // field return type
    allowedEventTypes: NexusGenRootTypes['EventType'][] | null; // [EventType!]
    id: string; // ID!
    name: string; // String!
  }
  Query: { // field return type
    findManyEventType: NexusGenRootTypes['EventType'][] | null; // [EventType!]
    findManyPassType: NexusGenRootTypes['PassType'][] | null; // [PassType!]
  }
}

export interface NexusGenArgTypes {
  EventType: {
    allowedPassTypes: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
  }
  Mutation: {
    createOneEventType: { // args
      data: NexusGenInputs['EventTypeCreateInput']; // EventTypeCreateInput!
    }
    createOnePassType: { // args
      data: NexusGenInputs['PassTypeCreateInput']; // PassTypeCreateInput!
    }
    updateOneEventType: { // args
      data: NexusGenInputs['EventTypeUpdateInput']; // EventTypeUpdateInput!
      where: NexusGenInputs['EventTypeWhereUniqueInput']; // EventTypeWhereUniqueInput!
    }
  }
  PassType: {
    allowedEventTypes: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
  }
  Query: {
    findManyEventType: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
    findManyPassType: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
  }
}

export interface NexusGenAbstractResolveReturnTypes {
}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames = "EventType" | "Mutation" | "PassType" | "Query";

export type NexusGenInputNames = "EventTypeCreateInput" | "EventTypeCreateManyWithoutAllowedEventTypesInput" | "EventTypeCreateWithoutAllowedPassTypesInput" | "EventTypeUpdateInput" | "EventTypeWhereUniqueInput" | "PassTypeCreateInput" | "PassTypeCreateManyWithoutAllowedPassTypesInput" | "PassTypeCreateWithoutAllowedEventTypesInput" | "PassTypeScalarWhereInput" | "PassTypeUpdateManyDataInput" | "PassTypeUpdateManyWithWhereNestedInput" | "PassTypeUpdateManyWithoutAllowedEventTypesInput" | "PassTypeUpdateWithWhereUniqueWithoutAllowedEventTypesInput" | "PassTypeUpdateWithoutAllowedEventTypesDataInput" | "PassTypeUpsertWithWhereUniqueWithoutAllowedEventTypesInput" | "PassTypeWhereUniqueInput";

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = "Boolean" | "Float" | "ID" | "Int" | "String";

export type NexusGenUnionNames = never;

export interface NexusGenTypes {
  context: ctx.Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}